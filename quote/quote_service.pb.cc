// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: quote_service.proto

#include "quote_service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace yuanda {
class QuoteRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QuoteRequest>
      _instance;
} _QuoteRequest_default_instance_;
class QuoteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Quote>
      _instance;
} _Quote_default_instance_;
}  // namespace yuanda
namespace protobuf_quote_5fservice_2eproto {
void InitDefaultsQuoteRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::yuanda::_QuoteRequest_default_instance_;
    new (ptr) ::yuanda::QuoteRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yuanda::QuoteRequest::InitAsDefaultInstance();
}

void InitDefaultsQuoteRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsQuoteRequestImpl);
}

void InitDefaultsQuoteImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::yuanda::_Quote_default_instance_;
    new (ptr) ::yuanda::Quote();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yuanda::Quote::InitAsDefaultInstance();
}

void InitDefaultsQuote() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsQuoteImpl);
}

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::yuanda::QuoteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::yuanda::QuoteRequest, subcribes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::yuanda::QuoteRequest, unsubcribes_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::yuanda::Quote, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::yuanda::Quote, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::yuanda::Quote, label_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::yuanda::Quote, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::yuanda::Quote, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::yuanda::Quote, preclose_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::yuanda::Quote, volume_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::yuanda::Quote, amount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::yuanda::Quote, open_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::yuanda::Quote, high_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::yuanda::Quote, low_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::yuanda::Quote, price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::yuanda::Quote, buyprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::yuanda::Quote, buyvolume_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::yuanda::Quote, sellprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::yuanda::Quote, sellvolume_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::yuanda::Quote, precloseiopv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::yuanda::Quote, iopv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::yuanda::Quote, tradenumber_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::yuanda::Quote, buyordernum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::yuanda::Quote, sellordernum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::yuanda::Quote, upanddown1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::yuanda::Quote, upanddown2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::yuanda::Quote, pe1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::yuanda::Quote, pe2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::yuanda::Quote, weightedbuyprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::yuanda::Quote, totalbuyvolume_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::yuanda::Quote, weightedsellprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::yuanda::Quote, totalsellvolume_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::yuanda::Quote, premiumrate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::yuanda::Quote, openinterest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::yuanda::Quote, hightlimit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::yuanda::Quote, lowlimit_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::yuanda::QuoteRequest)},
  { 7, -1, sizeof(::yuanda::Quote)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::yuanda::_QuoteRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::yuanda::_Quote_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "quote_service.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023quote_service.proto\022\006yuanda\"6\n\014QuoteRe"
      "quest\022\021\n\tSubcribes\030\001 \003(\t\022\023\n\013Unsubcribes\030"
      "\002 \003(\t\"\354\004\n\005Quote\022\014\n\004Time\030\001 \001(\005\022\r\n\005Label\030\002"
      " \001(\t\022\016\n\006Status\030\003 \001(\005\022#\n\004Type\030\004 \001(\0162\025.yua"
      "nda.SECURITY_TYPE\022\020\n\010PreClose\030\005 \001(\001\022\016\n\006V"
      "olume\030\006 \001(\003\022\016\n\006Amount\030\007 \001(\001\022\014\n\004Open\030\010 \001("
      "\001\022\014\n\004High\030\t \001(\001\022\013\n\003Low\030\n \001(\001\022\r\n\005Price\030\013 "
      "\001(\001\022\020\n\010BuyPrice\030\014 \003(\001\022\021\n\tBuyVolume\030\r \003(\003"
      "\022\021\n\tSellPrice\030\016 \003(\001\022\022\n\nSellVolume\030\017 \003(\003\022"
      "\024\n\014PreCloseIOPV\030\020 \001(\001\022\014\n\004IOPV\030\021 \001(\001\022\023\n\013T"
      "radeNumber\030\022 \001(\003\022\023\n\013BuyOrderNum\030\023 \003(\003\022\024\n"
      "\014SellOrderNum\030\024 \003(\003\022\022\n\nUpAndDown1\030\025 \001(\001\022"
      "\022\n\nUpAndDown2\030\026 \001(\001\022\013\n\003PE1\030\027 \001(\001\022\013\n\003PE2\030"
      "\030 \001(\001\022\030\n\020WeightedBuyPrice\030\031 \001(\001\022\026\n\016Total"
      "BuyVolume\030\032 \001(\003\022\031\n\021WeightedSellPrice\030\033 \001"
      "(\001\022\027\n\017TotalSellVolume\030\034 \001(\003\022\023\n\013PremiumRa"
      "te\030\035 \001(\001\022\024\n\014OpenInterest\030\036 \001(\003\022\022\n\nHightL"
      "imit\030\037 \001(\001\022\020\n\010LowLimit\030  \001(\001*p\n\rSECURITY"
      "_TYPE\022\t\n\005INDEX\020\000\022\t\n\005STOCK\020\001\022\010\n\004BOND\020\002\022\010\n"
      "\004FUND\020\003\022\013\n\007WARRANT\020\004\022\n\n\006OPTION\020\005\022\017\n\013PLED"
      "GE_REPO\020\006\022\013\n\007UNKNOWN\020\0072F\n\013QuoteServer\0227\n"
      "\nFetchQuote\022\024.yuanda.QuoteRequest\032\r.yuan"
      "da.Quote\"\000(\0010\001B2\n\026com.yuanda.quoteserver"
      "B\020QuoteServerProtoP\001\242\002\003RTGb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 954);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "quote_service.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_quote_5fservice_2eproto
namespace yuanda {
const ::google::protobuf::EnumDescriptor* SECURITY_TYPE_descriptor() {
  protobuf_quote_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_quote_5fservice_2eproto::file_level_enum_descriptors[0];
}
bool SECURITY_TYPE_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void QuoteRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuoteRequest::kSubcribesFieldNumber;
const int QuoteRequest::kUnsubcribesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuoteRequest::QuoteRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_quote_5fservice_2eproto::InitDefaultsQuoteRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:yuanda.QuoteRequest)
}
QuoteRequest::QuoteRequest(const QuoteRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      subcribes_(from.subcribes_),
      unsubcribes_(from.unsubcribes_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:yuanda.QuoteRequest)
}

void QuoteRequest::SharedCtor() {
  _cached_size_ = 0;
}

QuoteRequest::~QuoteRequest() {
  // @@protoc_insertion_point(destructor:yuanda.QuoteRequest)
  SharedDtor();
}

void QuoteRequest::SharedDtor() {
}

void QuoteRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuoteRequest::descriptor() {
  ::protobuf_quote_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_quote_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuoteRequest& QuoteRequest::default_instance() {
  ::protobuf_quote_5fservice_2eproto::InitDefaultsQuoteRequest();
  return *internal_default_instance();
}

QuoteRequest* QuoteRequest::New(::google::protobuf::Arena* arena) const {
  QuoteRequest* n = new QuoteRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuoteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:yuanda.QuoteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  subcribes_.Clear();
  unsubcribes_.Clear();
  _internal_metadata_.Clear();
}

bool QuoteRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:yuanda.QuoteRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string Subcribes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_subcribes()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->subcribes(this->subcribes_size() - 1).data(),
            static_cast<int>(this->subcribes(this->subcribes_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "yuanda.QuoteRequest.Subcribes"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string Unsubcribes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_unsubcribes()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->unsubcribes(this->unsubcribes_size() - 1).data(),
            static_cast<int>(this->unsubcribes(this->unsubcribes_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "yuanda.QuoteRequest.Unsubcribes"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:yuanda.QuoteRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:yuanda.QuoteRequest)
  return false;
#undef DO_
}

void QuoteRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:yuanda.QuoteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string Subcribes = 1;
  for (int i = 0, n = this->subcribes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subcribes(i).data(), static_cast<int>(this->subcribes(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "yuanda.QuoteRequest.Subcribes");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->subcribes(i), output);
  }

  // repeated string Unsubcribes = 2;
  for (int i = 0, n = this->unsubcribes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->unsubcribes(i).data(), static_cast<int>(this->unsubcribes(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "yuanda.QuoteRequest.Unsubcribes");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->unsubcribes(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:yuanda.QuoteRequest)
}

::google::protobuf::uint8* QuoteRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:yuanda.QuoteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string Subcribes = 1;
  for (int i = 0, n = this->subcribes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subcribes(i).data(), static_cast<int>(this->subcribes(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "yuanda.QuoteRequest.Subcribes");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->subcribes(i), target);
  }

  // repeated string Unsubcribes = 2;
  for (int i = 0, n = this->unsubcribes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->unsubcribes(i).data(), static_cast<int>(this->unsubcribes(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "yuanda.QuoteRequest.Unsubcribes");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->unsubcribes(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yuanda.QuoteRequest)
  return target;
}

size_t QuoteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yuanda.QuoteRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string Subcribes = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->subcribes_size());
  for (int i = 0, n = this->subcribes_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->subcribes(i));
  }

  // repeated string Unsubcribes = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->unsubcribes_size());
  for (int i = 0, n = this->unsubcribes_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->unsubcribes(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuoteRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yuanda.QuoteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const QuoteRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuoteRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yuanda.QuoteRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yuanda.QuoteRequest)
    MergeFrom(*source);
  }
}

void QuoteRequest::MergeFrom(const QuoteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yuanda.QuoteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  subcribes_.MergeFrom(from.subcribes_);
  unsubcribes_.MergeFrom(from.unsubcribes_);
}

void QuoteRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yuanda.QuoteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuoteRequest::CopyFrom(const QuoteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yuanda.QuoteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuoteRequest::IsInitialized() const {
  return true;
}

void QuoteRequest::Swap(QuoteRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuoteRequest::InternalSwap(QuoteRequest* other) {
  using std::swap;
  subcribes_.InternalSwap(&other->subcribes_);
  unsubcribes_.InternalSwap(&other->unsubcribes_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuoteRequest::GetMetadata() const {
  protobuf_quote_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_quote_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Quote::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Quote::kTimeFieldNumber;
const int Quote::kLabelFieldNumber;
const int Quote::kStatusFieldNumber;
const int Quote::kTypeFieldNumber;
const int Quote::kPreCloseFieldNumber;
const int Quote::kVolumeFieldNumber;
const int Quote::kAmountFieldNumber;
const int Quote::kOpenFieldNumber;
const int Quote::kHighFieldNumber;
const int Quote::kLowFieldNumber;
const int Quote::kPriceFieldNumber;
const int Quote::kBuyPriceFieldNumber;
const int Quote::kBuyVolumeFieldNumber;
const int Quote::kSellPriceFieldNumber;
const int Quote::kSellVolumeFieldNumber;
const int Quote::kPreCloseIOPVFieldNumber;
const int Quote::kIOPVFieldNumber;
const int Quote::kTradeNumberFieldNumber;
const int Quote::kBuyOrderNumFieldNumber;
const int Quote::kSellOrderNumFieldNumber;
const int Quote::kUpAndDown1FieldNumber;
const int Quote::kUpAndDown2FieldNumber;
const int Quote::kPE1FieldNumber;
const int Quote::kPE2FieldNumber;
const int Quote::kWeightedBuyPriceFieldNumber;
const int Quote::kTotalBuyVolumeFieldNumber;
const int Quote::kWeightedSellPriceFieldNumber;
const int Quote::kTotalSellVolumeFieldNumber;
const int Quote::kPremiumRateFieldNumber;
const int Quote::kOpenInterestFieldNumber;
const int Quote::kHightLimitFieldNumber;
const int Quote::kLowLimitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Quote::Quote()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_quote_5fservice_2eproto::InitDefaultsQuote();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:yuanda.Quote)
}
Quote::Quote(const Quote& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      buyprice_(from.buyprice_),
      buyvolume_(from.buyvolume_),
      sellprice_(from.sellprice_),
      sellvolume_(from.sellvolume_),
      buyordernum_(from.buyordernum_),
      sellordernum_(from.sellordernum_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.label().size() > 0) {
    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  ::memcpy(&time_, &from.time_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&time_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:yuanda.Quote)
}

void Quote::SharedCtor() {
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&time_)) + sizeof(type_));
  _cached_size_ = 0;
}

Quote::~Quote() {
  // @@protoc_insertion_point(destructor:yuanda.Quote)
  SharedDtor();
}

void Quote::SharedDtor() {
  label_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Quote::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Quote::descriptor() {
  ::protobuf_quote_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_quote_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Quote& Quote::default_instance() {
  ::protobuf_quote_5fservice_2eproto::InitDefaultsQuote();
  return *internal_default_instance();
}

Quote* Quote::New(::google::protobuf::Arena* arena) const {
  Quote* n = new Quote;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Quote::Clear() {
// @@protoc_insertion_point(message_clear_start:yuanda.Quote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  buyprice_.Clear();
  buyvolume_.Clear();
  sellprice_.Clear();
  sellvolume_.Clear();
  buyordernum_.Clear();
  sellordernum_.Clear();
  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&time_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool Quote::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:yuanda.Quote)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 Time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Label = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_label()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->label().data(), static_cast<int>(this->label().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "yuanda.Quote.Label"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Status = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .yuanda.SECURITY_TYPE Type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::yuanda::SECURITY_TYPE >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double PreClose = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &preclose_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 Volume = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &volume_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double Amount = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double Open = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &open_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double High = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 73 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &high_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double Low = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u /* 81 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &low_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double Price = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(89u /* 89 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double BuyPrice = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_buyprice())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(97u /* 97 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 98u, input, this->mutable_buyprice())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 BuyVolume = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_buyvolume())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 106u, input, this->mutable_buyvolume())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double SellPrice = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_sellprice())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(113u /* 113 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 114u, input, this->mutable_sellprice())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 SellVolume = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_sellvolume())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 122u, input, this->mutable_sellvolume())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double PreCloseIOPV = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(129u /* 129 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &precloseiopv_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double IOPV = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(137u /* 137 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &iopv_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 TradeNumber = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &tradenumber_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 BuyOrderNum = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_buyordernum())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 2, 154u, input, this->mutable_buyordernum())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 SellOrderNum = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_sellordernum())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 2, 162u, input, this->mutable_sellordernum())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double UpAndDown1 = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(169u /* 169 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &upanddown1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double UpAndDown2 = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(177u /* 177 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &upanddown2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double PE1 = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(185u /* 185 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &pe1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double PE2 = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(193u /* 193 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &pe2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double WeightedBuyPrice = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(201u /* 201 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &weightedbuyprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 TotalBuyVolume = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(208u /* 208 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &totalbuyvolume_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double WeightedSellPrice = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(217u /* 217 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &weightedsellprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 TotalSellVolume = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(224u /* 224 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &totalsellvolume_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double PremiumRate = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(233u /* 233 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &premiumrate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 OpenInterest = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 240 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &openinterest_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double HightLimit = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(249u /* 249 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &hightlimit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double LowLimit = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(1u /* 257 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lowlimit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:yuanda.Quote)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:yuanda.Quote)
  return false;
#undef DO_
}

void Quote::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:yuanda.Quote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Time = 1;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->time(), output);
  }

  // string Label = 2;
  if (this->label().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label().data(), static_cast<int>(this->label().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "yuanda.Quote.Label");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->label(), output);
  }

  // int32 Status = 3;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->status(), output);
  }

  // .yuanda.SECURITY_TYPE Type = 4;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->type(), output);
  }

  // double PreClose = 5;
  if (this->preclose() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->preclose(), output);
  }

  // int64 Volume = 6;
  if (this->volume() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->volume(), output);
  }

  // double Amount = 7;
  if (this->amount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->amount(), output);
  }

  // double Open = 8;
  if (this->open() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->open(), output);
  }

  // double High = 9;
  if (this->high() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->high(), output);
  }

  // double Low = 10;
  if (this->low() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->low(), output);
  }

  // double Price = 11;
  if (this->price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->price(), output);
  }

  // repeated double BuyPrice = 12;
  if (this->buyprice_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(12, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _buyprice_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->buyprice().data(), this->buyprice_size(), output);
  }

  // repeated int64 BuyVolume = 13;
  if (this->buyvolume_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(13, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _buyvolume_cached_byte_size_));
  }
  for (int i = 0, n = this->buyvolume_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->buyvolume(i), output);
  }

  // repeated double SellPrice = 14;
  if (this->sellprice_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(14, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _sellprice_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->sellprice().data(), this->sellprice_size(), output);
  }

  // repeated int64 SellVolume = 15;
  if (this->sellvolume_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(15, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _sellvolume_cached_byte_size_));
  }
  for (int i = 0, n = this->sellvolume_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->sellvolume(i), output);
  }

  // double PreCloseIOPV = 16;
  if (this->precloseiopv() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(16, this->precloseiopv(), output);
  }

  // double IOPV = 17;
  if (this->iopv() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(17, this->iopv(), output);
  }

  // int64 TradeNumber = 18;
  if (this->tradenumber() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(18, this->tradenumber(), output);
  }

  // repeated int64 BuyOrderNum = 19;
  if (this->buyordernum_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(19, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _buyordernum_cached_byte_size_));
  }
  for (int i = 0, n = this->buyordernum_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->buyordernum(i), output);
  }

  // repeated int64 SellOrderNum = 20;
  if (this->sellordernum_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(20, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _sellordernum_cached_byte_size_));
  }
  for (int i = 0, n = this->sellordernum_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->sellordernum(i), output);
  }

  // double UpAndDown1 = 21;
  if (this->upanddown1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(21, this->upanddown1(), output);
  }

  // double UpAndDown2 = 22;
  if (this->upanddown2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(22, this->upanddown2(), output);
  }

  // double PE1 = 23;
  if (this->pe1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(23, this->pe1(), output);
  }

  // double PE2 = 24;
  if (this->pe2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(24, this->pe2(), output);
  }

  // double WeightedBuyPrice = 25;
  if (this->weightedbuyprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(25, this->weightedbuyprice(), output);
  }

  // int64 TotalBuyVolume = 26;
  if (this->totalbuyvolume() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(26, this->totalbuyvolume(), output);
  }

  // double WeightedSellPrice = 27;
  if (this->weightedsellprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(27, this->weightedsellprice(), output);
  }

  // int64 TotalSellVolume = 28;
  if (this->totalsellvolume() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(28, this->totalsellvolume(), output);
  }

  // double PremiumRate = 29;
  if (this->premiumrate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(29, this->premiumrate(), output);
  }

  // int64 OpenInterest = 30;
  if (this->openinterest() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(30, this->openinterest(), output);
  }

  // double HightLimit = 31;
  if (this->hightlimit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(31, this->hightlimit(), output);
  }

  // double LowLimit = 32;
  if (this->lowlimit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(32, this->lowlimit(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:yuanda.Quote)
}

::google::protobuf::uint8* Quote::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:yuanda.Quote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Time = 1;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->time(), target);
  }

  // string Label = 2;
  if (this->label().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label().data(), static_cast<int>(this->label().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "yuanda.Quote.Label");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->label(), target);
  }

  // int32 Status = 3;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->status(), target);
  }

  // .yuanda.SECURITY_TYPE Type = 4;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->type(), target);
  }

  // double PreClose = 5;
  if (this->preclose() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->preclose(), target);
  }

  // int64 Volume = 6;
  if (this->volume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->volume(), target);
  }

  // double Amount = 7;
  if (this->amount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->amount(), target);
  }

  // double Open = 8;
  if (this->open() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->open(), target);
  }

  // double High = 9;
  if (this->high() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->high(), target);
  }

  // double Low = 10;
  if (this->low() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->low(), target);
  }

  // double Price = 11;
  if (this->price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->price(), target);
  }

  // repeated double BuyPrice = 12;
  if (this->buyprice_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      12,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _buyprice_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->buyprice_, target);
  }

  // repeated int64 BuyVolume = 13;
  if (this->buyvolume_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      13,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _buyvolume_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->buyvolume_, target);
  }

  // repeated double SellPrice = 14;
  if (this->sellprice_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      14,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _sellprice_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->sellprice_, target);
  }

  // repeated int64 SellVolume = 15;
  if (this->sellvolume_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      15,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _sellvolume_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->sellvolume_, target);
  }

  // double PreCloseIOPV = 16;
  if (this->precloseiopv() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(16, this->precloseiopv(), target);
  }

  // double IOPV = 17;
  if (this->iopv() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(17, this->iopv(), target);
  }

  // int64 TradeNumber = 18;
  if (this->tradenumber() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(18, this->tradenumber(), target);
  }

  // repeated int64 BuyOrderNum = 19;
  if (this->buyordernum_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      19,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _buyordernum_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->buyordernum_, target);
  }

  // repeated int64 SellOrderNum = 20;
  if (this->sellordernum_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      20,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _sellordernum_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->sellordernum_, target);
  }

  // double UpAndDown1 = 21;
  if (this->upanddown1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(21, this->upanddown1(), target);
  }

  // double UpAndDown2 = 22;
  if (this->upanddown2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(22, this->upanddown2(), target);
  }

  // double PE1 = 23;
  if (this->pe1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(23, this->pe1(), target);
  }

  // double PE2 = 24;
  if (this->pe2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(24, this->pe2(), target);
  }

  // double WeightedBuyPrice = 25;
  if (this->weightedbuyprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(25, this->weightedbuyprice(), target);
  }

  // int64 TotalBuyVolume = 26;
  if (this->totalbuyvolume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(26, this->totalbuyvolume(), target);
  }

  // double WeightedSellPrice = 27;
  if (this->weightedsellprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(27, this->weightedsellprice(), target);
  }

  // int64 TotalSellVolume = 28;
  if (this->totalsellvolume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(28, this->totalsellvolume(), target);
  }

  // double PremiumRate = 29;
  if (this->premiumrate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(29, this->premiumrate(), target);
  }

  // int64 OpenInterest = 30;
  if (this->openinterest() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(30, this->openinterest(), target);
  }

  // double HightLimit = 31;
  if (this->hightlimit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(31, this->hightlimit(), target);
  }

  // double LowLimit = 32;
  if (this->lowlimit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(32, this->lowlimit(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yuanda.Quote)
  return target;
}

size_t Quote::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yuanda.Quote)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated double BuyPrice = 12;
  {
    unsigned int count = static_cast<unsigned int>(this->buyprice_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _buyprice_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 BuyVolume = 13;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->buyvolume_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _buyvolume_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated double SellPrice = 14;
  {
    unsigned int count = static_cast<unsigned int>(this->sellprice_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _sellprice_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 SellVolume = 15;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->sellvolume_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _sellvolume_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 BuyOrderNum = 19;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->buyordernum_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _buyordernum_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 SellOrderNum = 20;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->sellordernum_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _sellordernum_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string Label = 2;
  if (this->label().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->label());
  }

  // int32 Time = 1;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->time());
  }

  // int32 Status = 3;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  // double PreClose = 5;
  if (this->preclose() != 0) {
    total_size += 1 + 8;
  }

  // int64 Volume = 6;
  if (this->volume() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->volume());
  }

  // double Amount = 7;
  if (this->amount() != 0) {
    total_size += 1 + 8;
  }

  // double Open = 8;
  if (this->open() != 0) {
    total_size += 1 + 8;
  }

  // double High = 9;
  if (this->high() != 0) {
    total_size += 1 + 8;
  }

  // double Low = 10;
  if (this->low() != 0) {
    total_size += 1 + 8;
  }

  // double Price = 11;
  if (this->price() != 0) {
    total_size += 1 + 8;
  }

  // double PreCloseIOPV = 16;
  if (this->precloseiopv() != 0) {
    total_size += 2 + 8;
  }

  // double IOPV = 17;
  if (this->iopv() != 0) {
    total_size += 2 + 8;
  }

  // int64 TradeNumber = 18;
  if (this->tradenumber() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->tradenumber());
  }

  // double UpAndDown1 = 21;
  if (this->upanddown1() != 0) {
    total_size += 2 + 8;
  }

  // double UpAndDown2 = 22;
  if (this->upanddown2() != 0) {
    total_size += 2 + 8;
  }

  // double PE1 = 23;
  if (this->pe1() != 0) {
    total_size += 2 + 8;
  }

  // double PE2 = 24;
  if (this->pe2() != 0) {
    total_size += 2 + 8;
  }

  // double WeightedBuyPrice = 25;
  if (this->weightedbuyprice() != 0) {
    total_size += 2 + 8;
  }

  // int64 TotalBuyVolume = 26;
  if (this->totalbuyvolume() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->totalbuyvolume());
  }

  // double WeightedSellPrice = 27;
  if (this->weightedsellprice() != 0) {
    total_size += 2 + 8;
  }

  // int64 TotalSellVolume = 28;
  if (this->totalsellvolume() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->totalsellvolume());
  }

  // double PremiumRate = 29;
  if (this->premiumrate() != 0) {
    total_size += 2 + 8;
  }

  // int64 OpenInterest = 30;
  if (this->openinterest() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->openinterest());
  }

  // double HightLimit = 31;
  if (this->hightlimit() != 0) {
    total_size += 2 + 8;
  }

  // double LowLimit = 32;
  if (this->lowlimit() != 0) {
    total_size += 2 + 8;
  }

  // .yuanda.SECURITY_TYPE Type = 4;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Quote::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yuanda.Quote)
  GOOGLE_DCHECK_NE(&from, this);
  const Quote* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Quote>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yuanda.Quote)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yuanda.Quote)
    MergeFrom(*source);
  }
}

void Quote::MergeFrom(const Quote& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yuanda.Quote)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  buyprice_.MergeFrom(from.buyprice_);
  buyvolume_.MergeFrom(from.buyvolume_);
  sellprice_.MergeFrom(from.sellprice_);
  sellvolume_.MergeFrom(from.sellvolume_);
  buyordernum_.MergeFrom(from.buyordernum_);
  sellordernum_.MergeFrom(from.sellordernum_);
  if (from.label().size() > 0) {

    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.preclose() != 0) {
    set_preclose(from.preclose());
  }
  if (from.volume() != 0) {
    set_volume(from.volume());
  }
  if (from.amount() != 0) {
    set_amount(from.amount());
  }
  if (from.open() != 0) {
    set_open(from.open());
  }
  if (from.high() != 0) {
    set_high(from.high());
  }
  if (from.low() != 0) {
    set_low(from.low());
  }
  if (from.price() != 0) {
    set_price(from.price());
  }
  if (from.precloseiopv() != 0) {
    set_precloseiopv(from.precloseiopv());
  }
  if (from.iopv() != 0) {
    set_iopv(from.iopv());
  }
  if (from.tradenumber() != 0) {
    set_tradenumber(from.tradenumber());
  }
  if (from.upanddown1() != 0) {
    set_upanddown1(from.upanddown1());
  }
  if (from.upanddown2() != 0) {
    set_upanddown2(from.upanddown2());
  }
  if (from.pe1() != 0) {
    set_pe1(from.pe1());
  }
  if (from.pe2() != 0) {
    set_pe2(from.pe2());
  }
  if (from.weightedbuyprice() != 0) {
    set_weightedbuyprice(from.weightedbuyprice());
  }
  if (from.totalbuyvolume() != 0) {
    set_totalbuyvolume(from.totalbuyvolume());
  }
  if (from.weightedsellprice() != 0) {
    set_weightedsellprice(from.weightedsellprice());
  }
  if (from.totalsellvolume() != 0) {
    set_totalsellvolume(from.totalsellvolume());
  }
  if (from.premiumrate() != 0) {
    set_premiumrate(from.premiumrate());
  }
  if (from.openinterest() != 0) {
    set_openinterest(from.openinterest());
  }
  if (from.hightlimit() != 0) {
    set_hightlimit(from.hightlimit());
  }
  if (from.lowlimit() != 0) {
    set_lowlimit(from.lowlimit());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void Quote::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yuanda.Quote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Quote::CopyFrom(const Quote& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yuanda.Quote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Quote::IsInitialized() const {
  return true;
}

void Quote::Swap(Quote* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Quote::InternalSwap(Quote* other) {
  using std::swap;
  buyprice_.InternalSwap(&other->buyprice_);
  buyvolume_.InternalSwap(&other->buyvolume_);
  sellprice_.InternalSwap(&other->sellprice_);
  sellvolume_.InternalSwap(&other->sellvolume_);
  buyordernum_.InternalSwap(&other->buyordernum_);
  sellordernum_.InternalSwap(&other->sellordernum_);
  label_.Swap(&other->label_);
  swap(time_, other->time_);
  swap(status_, other->status_);
  swap(preclose_, other->preclose_);
  swap(volume_, other->volume_);
  swap(amount_, other->amount_);
  swap(open_, other->open_);
  swap(high_, other->high_);
  swap(low_, other->low_);
  swap(price_, other->price_);
  swap(precloseiopv_, other->precloseiopv_);
  swap(iopv_, other->iopv_);
  swap(tradenumber_, other->tradenumber_);
  swap(upanddown1_, other->upanddown1_);
  swap(upanddown2_, other->upanddown2_);
  swap(pe1_, other->pe1_);
  swap(pe2_, other->pe2_);
  swap(weightedbuyprice_, other->weightedbuyprice_);
  swap(totalbuyvolume_, other->totalbuyvolume_);
  swap(weightedsellprice_, other->weightedsellprice_);
  swap(totalsellvolume_, other->totalsellvolume_);
  swap(premiumrate_, other->premiumrate_);
  swap(openinterest_, other->openinterest_);
  swap(hightlimit_, other->hightlimit_);
  swap(lowlimit_, other->lowlimit_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Quote::GetMetadata() const {
  protobuf_quote_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_quote_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace yuanda

// @@protoc_insertion_point(global_scope)
