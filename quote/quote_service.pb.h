// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: quote_service.proto

#ifndef PROTOBUF_quote_5fservice_2eproto__INCLUDED
#define PROTOBUF_quote_5fservice_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_quote_5fservice_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsQuoteRequestImpl();
void InitDefaultsQuoteRequest();
void InitDefaultsQuoteImpl();
void InitDefaultsQuote();
inline void InitDefaults() {
  InitDefaultsQuoteRequest();
  InitDefaultsQuote();
}
}  // namespace protobuf_quote_5fservice_2eproto
namespace yuanda {
class Quote;
class QuoteDefaultTypeInternal;
extern QuoteDefaultTypeInternal _Quote_default_instance_;
class QuoteRequest;
class QuoteRequestDefaultTypeInternal;
extern QuoteRequestDefaultTypeInternal _QuoteRequest_default_instance_;
}  // namespace yuanda
namespace yuanda {

enum SECURITY_TYPE {
  INDEX = 0,
  STOCK = 1,
  BOND = 2,
  FUND = 3,
  WARRANT = 4,
  OPTION = 5,
  PLEDGE_REPO = 6,
  UNKNOWN = 7,
  SECURITY_TYPE_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SECURITY_TYPE_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SECURITY_TYPE_IsValid(int value);
const SECURITY_TYPE SECURITY_TYPE_MIN = INDEX;
const SECURITY_TYPE SECURITY_TYPE_MAX = UNKNOWN;
const int SECURITY_TYPE_ARRAYSIZE = SECURITY_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* SECURITY_TYPE_descriptor();
inline const ::std::string& SECURITY_TYPE_Name(SECURITY_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    SECURITY_TYPE_descriptor(), value);
}
inline bool SECURITY_TYPE_Parse(
    const ::std::string& name, SECURITY_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SECURITY_TYPE>(
    SECURITY_TYPE_descriptor(), name, value);
}
// ===================================================================

class QuoteRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:yuanda.QuoteRequest) */ {
 public:
  QuoteRequest();
  virtual ~QuoteRequest();

  QuoteRequest(const QuoteRequest& from);

  inline QuoteRequest& operator=(const QuoteRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QuoteRequest(QuoteRequest&& from) noexcept
    : QuoteRequest() {
    *this = ::std::move(from);
  }

  inline QuoteRequest& operator=(QuoteRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const QuoteRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const QuoteRequest* internal_default_instance() {
    return reinterpret_cast<const QuoteRequest*>(
               &_QuoteRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(QuoteRequest* other);
  friend void swap(QuoteRequest& a, QuoteRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QuoteRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  QuoteRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QuoteRequest& from);
  void MergeFrom(const QuoteRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QuoteRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string Subcribes = 1;
  int subcribes_size() const;
  void clear_subcribes();
  static const int kSubcribesFieldNumber = 1;
  const ::std::string& subcribes(int index) const;
  ::std::string* mutable_subcribes(int index);
  void set_subcribes(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_subcribes(int index, ::std::string&& value);
  #endif
  void set_subcribes(int index, const char* value);
  void set_subcribes(int index, const char* value, size_t size);
  ::std::string* add_subcribes();
  void add_subcribes(const ::std::string& value);
  #if LANG_CXX11
  void add_subcribes(::std::string&& value);
  #endif
  void add_subcribes(const char* value);
  void add_subcribes(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& subcribes() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_subcribes();

  // repeated string Unsubcribes = 2;
  int unsubcribes_size() const;
  void clear_unsubcribes();
  static const int kUnsubcribesFieldNumber = 2;
  const ::std::string& unsubcribes(int index) const;
  ::std::string* mutable_unsubcribes(int index);
  void set_unsubcribes(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_unsubcribes(int index, ::std::string&& value);
  #endif
  void set_unsubcribes(int index, const char* value);
  void set_unsubcribes(int index, const char* value, size_t size);
  ::std::string* add_unsubcribes();
  void add_unsubcribes(const ::std::string& value);
  #if LANG_CXX11
  void add_unsubcribes(::std::string&& value);
  #endif
  void add_unsubcribes(const char* value);
  void add_unsubcribes(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& unsubcribes() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_unsubcribes();

  // @@protoc_insertion_point(class_scope:yuanda.QuoteRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> subcribes_;
  ::google::protobuf::RepeatedPtrField< ::std::string> unsubcribes_;
  mutable int _cached_size_;
  friend struct ::protobuf_quote_5fservice_2eproto::TableStruct;
  friend void ::protobuf_quote_5fservice_2eproto::InitDefaultsQuoteRequestImpl();
};
// -------------------------------------------------------------------

class Quote : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:yuanda.Quote) */ {
 public:
  Quote();
  virtual ~Quote();

  Quote(const Quote& from);

  inline Quote& operator=(const Quote& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Quote(Quote&& from) noexcept
    : Quote() {
    *this = ::std::move(from);
  }

  inline Quote& operator=(Quote&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Quote& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Quote* internal_default_instance() {
    return reinterpret_cast<const Quote*>(
               &_Quote_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Quote* other);
  friend void swap(Quote& a, Quote& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Quote* New() const PROTOBUF_FINAL { return New(NULL); }

  Quote* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Quote& from);
  void MergeFrom(const Quote& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Quote* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated double BuyPrice = 12;
  int buyprice_size() const;
  void clear_buyprice();
  static const int kBuyPriceFieldNumber = 12;
  double buyprice(int index) const;
  void set_buyprice(int index, double value);
  void add_buyprice(double value);
  const ::google::protobuf::RepeatedField< double >&
      buyprice() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_buyprice();

  // repeated int64 BuyVolume = 13;
  int buyvolume_size() const;
  void clear_buyvolume();
  static const int kBuyVolumeFieldNumber = 13;
  ::google::protobuf::int64 buyvolume(int index) const;
  void set_buyvolume(int index, ::google::protobuf::int64 value);
  void add_buyvolume(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      buyvolume() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_buyvolume();

  // repeated double SellPrice = 14;
  int sellprice_size() const;
  void clear_sellprice();
  static const int kSellPriceFieldNumber = 14;
  double sellprice(int index) const;
  void set_sellprice(int index, double value);
  void add_sellprice(double value);
  const ::google::protobuf::RepeatedField< double >&
      sellprice() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_sellprice();

  // repeated int64 SellVolume = 15;
  int sellvolume_size() const;
  void clear_sellvolume();
  static const int kSellVolumeFieldNumber = 15;
  ::google::protobuf::int64 sellvolume(int index) const;
  void set_sellvolume(int index, ::google::protobuf::int64 value);
  void add_sellvolume(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      sellvolume() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_sellvolume();

  // repeated int64 BuyOrderNum = 19;
  int buyordernum_size() const;
  void clear_buyordernum();
  static const int kBuyOrderNumFieldNumber = 19;
  ::google::protobuf::int64 buyordernum(int index) const;
  void set_buyordernum(int index, ::google::protobuf::int64 value);
  void add_buyordernum(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      buyordernum() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_buyordernum();

  // repeated int64 SellOrderNum = 20;
  int sellordernum_size() const;
  void clear_sellordernum();
  static const int kSellOrderNumFieldNumber = 20;
  ::google::protobuf::int64 sellordernum(int index) const;
  void set_sellordernum(int index, ::google::protobuf::int64 value);
  void add_sellordernum(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      sellordernum() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_sellordernum();

  // string Label = 2;
  void clear_label();
  static const int kLabelFieldNumber = 2;
  const ::std::string& label() const;
  void set_label(const ::std::string& value);
  #if LANG_CXX11
  void set_label(::std::string&& value);
  #endif
  void set_label(const char* value);
  void set_label(const char* value, size_t size);
  ::std::string* mutable_label();
  ::std::string* release_label();
  void set_allocated_label(::std::string* label);

  // int32 Time = 1;
  void clear_time();
  static const int kTimeFieldNumber = 1;
  ::google::protobuf::int32 time() const;
  void set_time(::google::protobuf::int32 value);

  // int32 Status = 3;
  void clear_status();
  static const int kStatusFieldNumber = 3;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // double PreClose = 5;
  void clear_preclose();
  static const int kPreCloseFieldNumber = 5;
  double preclose() const;
  void set_preclose(double value);

  // int64 Volume = 6;
  void clear_volume();
  static const int kVolumeFieldNumber = 6;
  ::google::protobuf::int64 volume() const;
  void set_volume(::google::protobuf::int64 value);

  // double Amount = 7;
  void clear_amount();
  static const int kAmountFieldNumber = 7;
  double amount() const;
  void set_amount(double value);

  // double Open = 8;
  void clear_open();
  static const int kOpenFieldNumber = 8;
  double open() const;
  void set_open(double value);

  // double High = 9;
  void clear_high();
  static const int kHighFieldNumber = 9;
  double high() const;
  void set_high(double value);

  // double Low = 10;
  void clear_low();
  static const int kLowFieldNumber = 10;
  double low() const;
  void set_low(double value);

  // double Price = 11;
  void clear_price();
  static const int kPriceFieldNumber = 11;
  double price() const;
  void set_price(double value);

  // double PreCloseIOPV = 16;
  void clear_precloseiopv();
  static const int kPreCloseIOPVFieldNumber = 16;
  double precloseiopv() const;
  void set_precloseiopv(double value);

  // double IOPV = 17;
  void clear_iopv();
  static const int kIOPVFieldNumber = 17;
  double iopv() const;
  void set_iopv(double value);

  // int64 TradeNumber = 18;
  void clear_tradenumber();
  static const int kTradeNumberFieldNumber = 18;
  ::google::protobuf::int64 tradenumber() const;
  void set_tradenumber(::google::protobuf::int64 value);

  // double UpAndDown1 = 21;
  void clear_upanddown1();
  static const int kUpAndDown1FieldNumber = 21;
  double upanddown1() const;
  void set_upanddown1(double value);

  // double UpAndDown2 = 22;
  void clear_upanddown2();
  static const int kUpAndDown2FieldNumber = 22;
  double upanddown2() const;
  void set_upanddown2(double value);

  // double PE1 = 23;
  void clear_pe1();
  static const int kPE1FieldNumber = 23;
  double pe1() const;
  void set_pe1(double value);

  // double PE2 = 24;
  void clear_pe2();
  static const int kPE2FieldNumber = 24;
  double pe2() const;
  void set_pe2(double value);

  // double WeightedBuyPrice = 25;
  void clear_weightedbuyprice();
  static const int kWeightedBuyPriceFieldNumber = 25;
  double weightedbuyprice() const;
  void set_weightedbuyprice(double value);

  // int64 TotalBuyVolume = 26;
  void clear_totalbuyvolume();
  static const int kTotalBuyVolumeFieldNumber = 26;
  ::google::protobuf::int64 totalbuyvolume() const;
  void set_totalbuyvolume(::google::protobuf::int64 value);

  // double WeightedSellPrice = 27;
  void clear_weightedsellprice();
  static const int kWeightedSellPriceFieldNumber = 27;
  double weightedsellprice() const;
  void set_weightedsellprice(double value);

  // int64 TotalSellVolume = 28;
  void clear_totalsellvolume();
  static const int kTotalSellVolumeFieldNumber = 28;
  ::google::protobuf::int64 totalsellvolume() const;
  void set_totalsellvolume(::google::protobuf::int64 value);

  // double PremiumRate = 29;
  void clear_premiumrate();
  static const int kPremiumRateFieldNumber = 29;
  double premiumrate() const;
  void set_premiumrate(double value);

  // int64 OpenInterest = 30;
  void clear_openinterest();
  static const int kOpenInterestFieldNumber = 30;
  ::google::protobuf::int64 openinterest() const;
  void set_openinterest(::google::protobuf::int64 value);

  // double HightLimit = 31;
  void clear_hightlimit();
  static const int kHightLimitFieldNumber = 31;
  double hightlimit() const;
  void set_hightlimit(double value);

  // double LowLimit = 32;
  void clear_lowlimit();
  static const int kLowLimitFieldNumber = 32;
  double lowlimit() const;
  void set_lowlimit(double value);

  // .yuanda.SECURITY_TYPE Type = 4;
  void clear_type();
  static const int kTypeFieldNumber = 4;
  ::yuanda::SECURITY_TYPE type() const;
  void set_type(::yuanda::SECURITY_TYPE value);

  // @@protoc_insertion_point(class_scope:yuanda.Quote)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< double > buyprice_;
  mutable int _buyprice_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > buyvolume_;
  mutable int _buyvolume_cached_byte_size_;
  ::google::protobuf::RepeatedField< double > sellprice_;
  mutable int _sellprice_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > sellvolume_;
  mutable int _sellvolume_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > buyordernum_;
  mutable int _buyordernum_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > sellordernum_;
  mutable int _sellordernum_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr label_;
  ::google::protobuf::int32 time_;
  ::google::protobuf::int32 status_;
  double preclose_;
  ::google::protobuf::int64 volume_;
  double amount_;
  double open_;
  double high_;
  double low_;
  double price_;
  double precloseiopv_;
  double iopv_;
  ::google::protobuf::int64 tradenumber_;
  double upanddown1_;
  double upanddown2_;
  double pe1_;
  double pe2_;
  double weightedbuyprice_;
  ::google::protobuf::int64 totalbuyvolume_;
  double weightedsellprice_;
  ::google::protobuf::int64 totalsellvolume_;
  double premiumrate_;
  ::google::protobuf::int64 openinterest_;
  double hightlimit_;
  double lowlimit_;
  int type_;
  mutable int _cached_size_;
  friend struct ::protobuf_quote_5fservice_2eproto::TableStruct;
  friend void ::protobuf_quote_5fservice_2eproto::InitDefaultsQuoteImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// QuoteRequest

// repeated string Subcribes = 1;
inline int QuoteRequest::subcribes_size() const {
  return subcribes_.size();
}
inline void QuoteRequest::clear_subcribes() {
  subcribes_.Clear();
}
inline const ::std::string& QuoteRequest::subcribes(int index) const {
  // @@protoc_insertion_point(field_get:yuanda.QuoteRequest.Subcribes)
  return subcribes_.Get(index);
}
inline ::std::string* QuoteRequest::mutable_subcribes(int index) {
  // @@protoc_insertion_point(field_mutable:yuanda.QuoteRequest.Subcribes)
  return subcribes_.Mutable(index);
}
inline void QuoteRequest::set_subcribes(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:yuanda.QuoteRequest.Subcribes)
  subcribes_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void QuoteRequest::set_subcribes(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:yuanda.QuoteRequest.Subcribes)
  subcribes_.Mutable(index)->assign(std::move(value));
}
#endif
inline void QuoteRequest::set_subcribes(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  subcribes_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:yuanda.QuoteRequest.Subcribes)
}
inline void QuoteRequest::set_subcribes(int index, const char* value, size_t size) {
  subcribes_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:yuanda.QuoteRequest.Subcribes)
}
inline ::std::string* QuoteRequest::add_subcribes() {
  // @@protoc_insertion_point(field_add_mutable:yuanda.QuoteRequest.Subcribes)
  return subcribes_.Add();
}
inline void QuoteRequest::add_subcribes(const ::std::string& value) {
  subcribes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:yuanda.QuoteRequest.Subcribes)
}
#if LANG_CXX11
inline void QuoteRequest::add_subcribes(::std::string&& value) {
  subcribes_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:yuanda.QuoteRequest.Subcribes)
}
#endif
inline void QuoteRequest::add_subcribes(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  subcribes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:yuanda.QuoteRequest.Subcribes)
}
inline void QuoteRequest::add_subcribes(const char* value, size_t size) {
  subcribes_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:yuanda.QuoteRequest.Subcribes)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
QuoteRequest::subcribes() const {
  // @@protoc_insertion_point(field_list:yuanda.QuoteRequest.Subcribes)
  return subcribes_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
QuoteRequest::mutable_subcribes() {
  // @@protoc_insertion_point(field_mutable_list:yuanda.QuoteRequest.Subcribes)
  return &subcribes_;
}

// repeated string Unsubcribes = 2;
inline int QuoteRequest::unsubcribes_size() const {
  return unsubcribes_.size();
}
inline void QuoteRequest::clear_unsubcribes() {
  unsubcribes_.Clear();
}
inline const ::std::string& QuoteRequest::unsubcribes(int index) const {
  // @@protoc_insertion_point(field_get:yuanda.QuoteRequest.Unsubcribes)
  return unsubcribes_.Get(index);
}
inline ::std::string* QuoteRequest::mutable_unsubcribes(int index) {
  // @@protoc_insertion_point(field_mutable:yuanda.QuoteRequest.Unsubcribes)
  return unsubcribes_.Mutable(index);
}
inline void QuoteRequest::set_unsubcribes(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:yuanda.QuoteRequest.Unsubcribes)
  unsubcribes_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void QuoteRequest::set_unsubcribes(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:yuanda.QuoteRequest.Unsubcribes)
  unsubcribes_.Mutable(index)->assign(std::move(value));
}
#endif
inline void QuoteRequest::set_unsubcribes(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  unsubcribes_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:yuanda.QuoteRequest.Unsubcribes)
}
inline void QuoteRequest::set_unsubcribes(int index, const char* value, size_t size) {
  unsubcribes_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:yuanda.QuoteRequest.Unsubcribes)
}
inline ::std::string* QuoteRequest::add_unsubcribes() {
  // @@protoc_insertion_point(field_add_mutable:yuanda.QuoteRequest.Unsubcribes)
  return unsubcribes_.Add();
}
inline void QuoteRequest::add_unsubcribes(const ::std::string& value) {
  unsubcribes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:yuanda.QuoteRequest.Unsubcribes)
}
#if LANG_CXX11
inline void QuoteRequest::add_unsubcribes(::std::string&& value) {
  unsubcribes_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:yuanda.QuoteRequest.Unsubcribes)
}
#endif
inline void QuoteRequest::add_unsubcribes(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  unsubcribes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:yuanda.QuoteRequest.Unsubcribes)
}
inline void QuoteRequest::add_unsubcribes(const char* value, size_t size) {
  unsubcribes_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:yuanda.QuoteRequest.Unsubcribes)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
QuoteRequest::unsubcribes() const {
  // @@protoc_insertion_point(field_list:yuanda.QuoteRequest.Unsubcribes)
  return unsubcribes_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
QuoteRequest::mutable_unsubcribes() {
  // @@protoc_insertion_point(field_mutable_list:yuanda.QuoteRequest.Unsubcribes)
  return &unsubcribes_;
}

// -------------------------------------------------------------------

// Quote

// int32 Time = 1;
inline void Quote::clear_time() {
  time_ = 0;
}
inline ::google::protobuf::int32 Quote::time() const {
  // @@protoc_insertion_point(field_get:yuanda.Quote.Time)
  return time_;
}
inline void Quote::set_time(::google::protobuf::int32 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:yuanda.Quote.Time)
}

// string Label = 2;
inline void Quote::clear_label() {
  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Quote::label() const {
  // @@protoc_insertion_point(field_get:yuanda.Quote.Label)
  return label_.GetNoArena();
}
inline void Quote::set_label(const ::std::string& value) {
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:yuanda.Quote.Label)
}
#if LANG_CXX11
inline void Quote::set_label(::std::string&& value) {
  
  label_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:yuanda.Quote.Label)
}
#endif
inline void Quote::set_label(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yuanda.Quote.Label)
}
inline void Quote::set_label(const char* value, size_t size) {
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yuanda.Quote.Label)
}
inline ::std::string* Quote::mutable_label() {
  
  // @@protoc_insertion_point(field_mutable:yuanda.Quote.Label)
  return label_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Quote::release_label() {
  // @@protoc_insertion_point(field_release:yuanda.Quote.Label)
  
  return label_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Quote::set_allocated_label(::std::string* label) {
  if (label != NULL) {
    
  } else {
    
  }
  label_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), label);
  // @@protoc_insertion_point(field_set_allocated:yuanda.Quote.Label)
}

// int32 Status = 3;
inline void Quote::clear_status() {
  status_ = 0;
}
inline ::google::protobuf::int32 Quote::status() const {
  // @@protoc_insertion_point(field_get:yuanda.Quote.Status)
  return status_;
}
inline void Quote::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:yuanda.Quote.Status)
}

// .yuanda.SECURITY_TYPE Type = 4;
inline void Quote::clear_type() {
  type_ = 0;
}
inline ::yuanda::SECURITY_TYPE Quote::type() const {
  // @@protoc_insertion_point(field_get:yuanda.Quote.Type)
  return static_cast< ::yuanda::SECURITY_TYPE >(type_);
}
inline void Quote::set_type(::yuanda::SECURITY_TYPE value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:yuanda.Quote.Type)
}

// double PreClose = 5;
inline void Quote::clear_preclose() {
  preclose_ = 0;
}
inline double Quote::preclose() const {
  // @@protoc_insertion_point(field_get:yuanda.Quote.PreClose)
  return preclose_;
}
inline void Quote::set_preclose(double value) {
  
  preclose_ = value;
  // @@protoc_insertion_point(field_set:yuanda.Quote.PreClose)
}

// int64 Volume = 6;
inline void Quote::clear_volume() {
  volume_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Quote::volume() const {
  // @@protoc_insertion_point(field_get:yuanda.Quote.Volume)
  return volume_;
}
inline void Quote::set_volume(::google::protobuf::int64 value) {
  
  volume_ = value;
  // @@protoc_insertion_point(field_set:yuanda.Quote.Volume)
}

// double Amount = 7;
inline void Quote::clear_amount() {
  amount_ = 0;
}
inline double Quote::amount() const {
  // @@protoc_insertion_point(field_get:yuanda.Quote.Amount)
  return amount_;
}
inline void Quote::set_amount(double value) {
  
  amount_ = value;
  // @@protoc_insertion_point(field_set:yuanda.Quote.Amount)
}

// double Open = 8;
inline void Quote::clear_open() {
  open_ = 0;
}
inline double Quote::open() const {
  // @@protoc_insertion_point(field_get:yuanda.Quote.Open)
  return open_;
}
inline void Quote::set_open(double value) {
  
  open_ = value;
  // @@protoc_insertion_point(field_set:yuanda.Quote.Open)
}

// double High = 9;
inline void Quote::clear_high() {
  high_ = 0;
}
inline double Quote::high() const {
  // @@protoc_insertion_point(field_get:yuanda.Quote.High)
  return high_;
}
inline void Quote::set_high(double value) {
  
  high_ = value;
  // @@protoc_insertion_point(field_set:yuanda.Quote.High)
}

// double Low = 10;
inline void Quote::clear_low() {
  low_ = 0;
}
inline double Quote::low() const {
  // @@protoc_insertion_point(field_get:yuanda.Quote.Low)
  return low_;
}
inline void Quote::set_low(double value) {
  
  low_ = value;
  // @@protoc_insertion_point(field_set:yuanda.Quote.Low)
}

// double Price = 11;
inline void Quote::clear_price() {
  price_ = 0;
}
inline double Quote::price() const {
  // @@protoc_insertion_point(field_get:yuanda.Quote.Price)
  return price_;
}
inline void Quote::set_price(double value) {
  
  price_ = value;
  // @@protoc_insertion_point(field_set:yuanda.Quote.Price)
}

// repeated double BuyPrice = 12;
inline int Quote::buyprice_size() const {
  return buyprice_.size();
}
inline void Quote::clear_buyprice() {
  buyprice_.Clear();
}
inline double Quote::buyprice(int index) const {
  // @@protoc_insertion_point(field_get:yuanda.Quote.BuyPrice)
  return buyprice_.Get(index);
}
inline void Quote::set_buyprice(int index, double value) {
  buyprice_.Set(index, value);
  // @@protoc_insertion_point(field_set:yuanda.Quote.BuyPrice)
}
inline void Quote::add_buyprice(double value) {
  buyprice_.Add(value);
  // @@protoc_insertion_point(field_add:yuanda.Quote.BuyPrice)
}
inline const ::google::protobuf::RepeatedField< double >&
Quote::buyprice() const {
  // @@protoc_insertion_point(field_list:yuanda.Quote.BuyPrice)
  return buyprice_;
}
inline ::google::protobuf::RepeatedField< double >*
Quote::mutable_buyprice() {
  // @@protoc_insertion_point(field_mutable_list:yuanda.Quote.BuyPrice)
  return &buyprice_;
}

// repeated int64 BuyVolume = 13;
inline int Quote::buyvolume_size() const {
  return buyvolume_.size();
}
inline void Quote::clear_buyvolume() {
  buyvolume_.Clear();
}
inline ::google::protobuf::int64 Quote::buyvolume(int index) const {
  // @@protoc_insertion_point(field_get:yuanda.Quote.BuyVolume)
  return buyvolume_.Get(index);
}
inline void Quote::set_buyvolume(int index, ::google::protobuf::int64 value) {
  buyvolume_.Set(index, value);
  // @@protoc_insertion_point(field_set:yuanda.Quote.BuyVolume)
}
inline void Quote::add_buyvolume(::google::protobuf::int64 value) {
  buyvolume_.Add(value);
  // @@protoc_insertion_point(field_add:yuanda.Quote.BuyVolume)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
Quote::buyvolume() const {
  // @@protoc_insertion_point(field_list:yuanda.Quote.BuyVolume)
  return buyvolume_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
Quote::mutable_buyvolume() {
  // @@protoc_insertion_point(field_mutable_list:yuanda.Quote.BuyVolume)
  return &buyvolume_;
}

// repeated double SellPrice = 14;
inline int Quote::sellprice_size() const {
  return sellprice_.size();
}
inline void Quote::clear_sellprice() {
  sellprice_.Clear();
}
inline double Quote::sellprice(int index) const {
  // @@protoc_insertion_point(field_get:yuanda.Quote.SellPrice)
  return sellprice_.Get(index);
}
inline void Quote::set_sellprice(int index, double value) {
  sellprice_.Set(index, value);
  // @@protoc_insertion_point(field_set:yuanda.Quote.SellPrice)
}
inline void Quote::add_sellprice(double value) {
  sellprice_.Add(value);
  // @@protoc_insertion_point(field_add:yuanda.Quote.SellPrice)
}
inline const ::google::protobuf::RepeatedField< double >&
Quote::sellprice() const {
  // @@protoc_insertion_point(field_list:yuanda.Quote.SellPrice)
  return sellprice_;
}
inline ::google::protobuf::RepeatedField< double >*
Quote::mutable_sellprice() {
  // @@protoc_insertion_point(field_mutable_list:yuanda.Quote.SellPrice)
  return &sellprice_;
}

// repeated int64 SellVolume = 15;
inline int Quote::sellvolume_size() const {
  return sellvolume_.size();
}
inline void Quote::clear_sellvolume() {
  sellvolume_.Clear();
}
inline ::google::protobuf::int64 Quote::sellvolume(int index) const {
  // @@protoc_insertion_point(field_get:yuanda.Quote.SellVolume)
  return sellvolume_.Get(index);
}
inline void Quote::set_sellvolume(int index, ::google::protobuf::int64 value) {
  sellvolume_.Set(index, value);
  // @@protoc_insertion_point(field_set:yuanda.Quote.SellVolume)
}
inline void Quote::add_sellvolume(::google::protobuf::int64 value) {
  sellvolume_.Add(value);
  // @@protoc_insertion_point(field_add:yuanda.Quote.SellVolume)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
Quote::sellvolume() const {
  // @@protoc_insertion_point(field_list:yuanda.Quote.SellVolume)
  return sellvolume_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
Quote::mutable_sellvolume() {
  // @@protoc_insertion_point(field_mutable_list:yuanda.Quote.SellVolume)
  return &sellvolume_;
}

// double PreCloseIOPV = 16;
inline void Quote::clear_precloseiopv() {
  precloseiopv_ = 0;
}
inline double Quote::precloseiopv() const {
  // @@protoc_insertion_point(field_get:yuanda.Quote.PreCloseIOPV)
  return precloseiopv_;
}
inline void Quote::set_precloseiopv(double value) {
  
  precloseiopv_ = value;
  // @@protoc_insertion_point(field_set:yuanda.Quote.PreCloseIOPV)
}

// double IOPV = 17;
inline void Quote::clear_iopv() {
  iopv_ = 0;
}
inline double Quote::iopv() const {
  // @@protoc_insertion_point(field_get:yuanda.Quote.IOPV)
  return iopv_;
}
inline void Quote::set_iopv(double value) {
  
  iopv_ = value;
  // @@protoc_insertion_point(field_set:yuanda.Quote.IOPV)
}

// int64 TradeNumber = 18;
inline void Quote::clear_tradenumber() {
  tradenumber_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Quote::tradenumber() const {
  // @@protoc_insertion_point(field_get:yuanda.Quote.TradeNumber)
  return tradenumber_;
}
inline void Quote::set_tradenumber(::google::protobuf::int64 value) {
  
  tradenumber_ = value;
  // @@protoc_insertion_point(field_set:yuanda.Quote.TradeNumber)
}

// repeated int64 BuyOrderNum = 19;
inline int Quote::buyordernum_size() const {
  return buyordernum_.size();
}
inline void Quote::clear_buyordernum() {
  buyordernum_.Clear();
}
inline ::google::protobuf::int64 Quote::buyordernum(int index) const {
  // @@protoc_insertion_point(field_get:yuanda.Quote.BuyOrderNum)
  return buyordernum_.Get(index);
}
inline void Quote::set_buyordernum(int index, ::google::protobuf::int64 value) {
  buyordernum_.Set(index, value);
  // @@protoc_insertion_point(field_set:yuanda.Quote.BuyOrderNum)
}
inline void Quote::add_buyordernum(::google::protobuf::int64 value) {
  buyordernum_.Add(value);
  // @@protoc_insertion_point(field_add:yuanda.Quote.BuyOrderNum)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
Quote::buyordernum() const {
  // @@protoc_insertion_point(field_list:yuanda.Quote.BuyOrderNum)
  return buyordernum_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
Quote::mutable_buyordernum() {
  // @@protoc_insertion_point(field_mutable_list:yuanda.Quote.BuyOrderNum)
  return &buyordernum_;
}

// repeated int64 SellOrderNum = 20;
inline int Quote::sellordernum_size() const {
  return sellordernum_.size();
}
inline void Quote::clear_sellordernum() {
  sellordernum_.Clear();
}
inline ::google::protobuf::int64 Quote::sellordernum(int index) const {
  // @@protoc_insertion_point(field_get:yuanda.Quote.SellOrderNum)
  return sellordernum_.Get(index);
}
inline void Quote::set_sellordernum(int index, ::google::protobuf::int64 value) {
  sellordernum_.Set(index, value);
  // @@protoc_insertion_point(field_set:yuanda.Quote.SellOrderNum)
}
inline void Quote::add_sellordernum(::google::protobuf::int64 value) {
  sellordernum_.Add(value);
  // @@protoc_insertion_point(field_add:yuanda.Quote.SellOrderNum)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
Quote::sellordernum() const {
  // @@protoc_insertion_point(field_list:yuanda.Quote.SellOrderNum)
  return sellordernum_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
Quote::mutable_sellordernum() {
  // @@protoc_insertion_point(field_mutable_list:yuanda.Quote.SellOrderNum)
  return &sellordernum_;
}

// double UpAndDown1 = 21;
inline void Quote::clear_upanddown1() {
  upanddown1_ = 0;
}
inline double Quote::upanddown1() const {
  // @@protoc_insertion_point(field_get:yuanda.Quote.UpAndDown1)
  return upanddown1_;
}
inline void Quote::set_upanddown1(double value) {
  
  upanddown1_ = value;
  // @@protoc_insertion_point(field_set:yuanda.Quote.UpAndDown1)
}

// double UpAndDown2 = 22;
inline void Quote::clear_upanddown2() {
  upanddown2_ = 0;
}
inline double Quote::upanddown2() const {
  // @@protoc_insertion_point(field_get:yuanda.Quote.UpAndDown2)
  return upanddown2_;
}
inline void Quote::set_upanddown2(double value) {
  
  upanddown2_ = value;
  // @@protoc_insertion_point(field_set:yuanda.Quote.UpAndDown2)
}

// double PE1 = 23;
inline void Quote::clear_pe1() {
  pe1_ = 0;
}
inline double Quote::pe1() const {
  // @@protoc_insertion_point(field_get:yuanda.Quote.PE1)
  return pe1_;
}
inline void Quote::set_pe1(double value) {
  
  pe1_ = value;
  // @@protoc_insertion_point(field_set:yuanda.Quote.PE1)
}

// double PE2 = 24;
inline void Quote::clear_pe2() {
  pe2_ = 0;
}
inline double Quote::pe2() const {
  // @@protoc_insertion_point(field_get:yuanda.Quote.PE2)
  return pe2_;
}
inline void Quote::set_pe2(double value) {
  
  pe2_ = value;
  // @@protoc_insertion_point(field_set:yuanda.Quote.PE2)
}

// double WeightedBuyPrice = 25;
inline void Quote::clear_weightedbuyprice() {
  weightedbuyprice_ = 0;
}
inline double Quote::weightedbuyprice() const {
  // @@protoc_insertion_point(field_get:yuanda.Quote.WeightedBuyPrice)
  return weightedbuyprice_;
}
inline void Quote::set_weightedbuyprice(double value) {
  
  weightedbuyprice_ = value;
  // @@protoc_insertion_point(field_set:yuanda.Quote.WeightedBuyPrice)
}

// int64 TotalBuyVolume = 26;
inline void Quote::clear_totalbuyvolume() {
  totalbuyvolume_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Quote::totalbuyvolume() const {
  // @@protoc_insertion_point(field_get:yuanda.Quote.TotalBuyVolume)
  return totalbuyvolume_;
}
inline void Quote::set_totalbuyvolume(::google::protobuf::int64 value) {
  
  totalbuyvolume_ = value;
  // @@protoc_insertion_point(field_set:yuanda.Quote.TotalBuyVolume)
}

// double WeightedSellPrice = 27;
inline void Quote::clear_weightedsellprice() {
  weightedsellprice_ = 0;
}
inline double Quote::weightedsellprice() const {
  // @@protoc_insertion_point(field_get:yuanda.Quote.WeightedSellPrice)
  return weightedsellprice_;
}
inline void Quote::set_weightedsellprice(double value) {
  
  weightedsellprice_ = value;
  // @@protoc_insertion_point(field_set:yuanda.Quote.WeightedSellPrice)
}

// int64 TotalSellVolume = 28;
inline void Quote::clear_totalsellvolume() {
  totalsellvolume_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Quote::totalsellvolume() const {
  // @@protoc_insertion_point(field_get:yuanda.Quote.TotalSellVolume)
  return totalsellvolume_;
}
inline void Quote::set_totalsellvolume(::google::protobuf::int64 value) {
  
  totalsellvolume_ = value;
  // @@protoc_insertion_point(field_set:yuanda.Quote.TotalSellVolume)
}

// double PremiumRate = 29;
inline void Quote::clear_premiumrate() {
  premiumrate_ = 0;
}
inline double Quote::premiumrate() const {
  // @@protoc_insertion_point(field_get:yuanda.Quote.PremiumRate)
  return premiumrate_;
}
inline void Quote::set_premiumrate(double value) {
  
  premiumrate_ = value;
  // @@protoc_insertion_point(field_set:yuanda.Quote.PremiumRate)
}

// int64 OpenInterest = 30;
inline void Quote::clear_openinterest() {
  openinterest_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Quote::openinterest() const {
  // @@protoc_insertion_point(field_get:yuanda.Quote.OpenInterest)
  return openinterest_;
}
inline void Quote::set_openinterest(::google::protobuf::int64 value) {
  
  openinterest_ = value;
  // @@protoc_insertion_point(field_set:yuanda.Quote.OpenInterest)
}

// double HightLimit = 31;
inline void Quote::clear_hightlimit() {
  hightlimit_ = 0;
}
inline double Quote::hightlimit() const {
  // @@protoc_insertion_point(field_get:yuanda.Quote.HightLimit)
  return hightlimit_;
}
inline void Quote::set_hightlimit(double value) {
  
  hightlimit_ = value;
  // @@protoc_insertion_point(field_set:yuanda.Quote.HightLimit)
}

// double LowLimit = 32;
inline void Quote::clear_lowlimit() {
  lowlimit_ = 0;
}
inline double Quote::lowlimit() const {
  // @@protoc_insertion_point(field_get:yuanda.Quote.LowLimit)
  return lowlimit_;
}
inline void Quote::set_lowlimit(double value) {
  
  lowlimit_ = value;
  // @@protoc_insertion_point(field_set:yuanda.Quote.LowLimit)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace yuanda

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::yuanda::SECURITY_TYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::yuanda::SECURITY_TYPE>() {
  return ::yuanda::SECURITY_TYPE_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_quote_5fservice_2eproto__INCLUDED
